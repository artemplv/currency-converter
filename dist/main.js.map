{"version":3,"file":"main.js","mappings":"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","sources":["webpack://currency-converter/./node_modules/d3-geo/src/math.js","webpack://currency-converter/./node_modules/d3-geo/src/noop.js","webpack://currency-converter/./node_modules/d3-geo/src/clip/buffer.js","webpack://currency-converter/./node_modules/d3-geo/src/pointEqual.js","webpack://currency-converter/./node_modules/d3-geo/src/clip/rejoin.js","webpack://currency-converter/./node_modules/d3-array/src/fsum.js","webpack://currency-converter/./node_modules/d3-geo/src/cartesian.js","webpack://currency-converter/./node_modules/d3-geo/src/polygonContains.js","webpack://currency-converter/./node_modules/d3-array/src/merge.js","webpack://currency-converter/./node_modules/d3-geo/src/clip/index.js","webpack://currency-converter/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://currency-converter/./node_modules/d3-geo/src/circle.js","webpack://currency-converter/./node_modules/d3-geo/src/clip/rectangle.js","webpack://currency-converter/./node_modules/d3-geo/src/compose.js","webpack://currency-converter/./node_modules/d3-geo/src/identity.js","webpack://currency-converter/./node_modules/d3-geo/src/rotation.js","webpack://currency-converter/./node_modules/d3-geo/src/transform.js","webpack://currency-converter/./node_modules/d3-geo/src/stream.js","webpack://currency-converter/./node_modules/d3-geo/src/path/bounds.js","webpack://currency-converter/./node_modules/d3-geo/src/projection/fit.js","webpack://currency-converter/./node_modules/d3-geo/src/projection/resample.js","webpack://currency-converter/./node_modules/d3-geo/src/projection/index.js","webpack://currency-converter/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://currency-converter/./node_modules/d3-geo/src/projection/orthographic.js","webpack://currency-converter/./node_modules/d3-geo/src/path/area.js","webpack://currency-converter/./node_modules/d3-geo/src/path/centroid.js","webpack://currency-converter/./node_modules/d3-geo/src/path/context.js","webpack://currency-converter/./node_modules/d3-geo/src/path/measure.js","webpack://currency-converter/./node_modules/d3-geo/src/path/string.js","webpack://currency-converter/./node_modules/d3-geo/src/length.js","webpack://currency-converter/./node_modules/d3-geo/src/distance.js","webpack://currency-converter/./node_modules/d3-geo/src/contains.js","webpack://currency-converter/./src/scripts/map.js","webpack://currency-converter/./node_modules/d3-geo/src/clip/circle.js","webpack://currency-converter/./node_modules/d3-geo/src/clip/line.js","webpack://currency-converter/./node_modules/d3-geo/src/path/index.js","webpack://currency-converter/./node_modules/d3-selection/src/pointer.js","webpack://currency-converter/./node_modules/d3-selection/src/sourceEvent.js","webpack://currency-converter/./src/index.js"],"sourcesContent":["export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","export default x => x;\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {\n  // geoEquirectangular,\n  geoOrthographic,\n  geoPath,\n  geoContains,\n} from 'd3-geo';\n\nimport {\n  pointer,\n} from 'd3-selection';\n\n// eslint-disable-next-line max-len\nconst geojsonUrl = 'https://gist.githubusercontent.com/artemplv/be8ebf292a4433944f3948b06732a6cc/raw/cd2e417144d0d1b0fd10888b4de01b373ad49d5e/110m_countries.json';\n\nconst canvas = document.querySelector('#map canvas');\nconst ctx = canvas.getContext('2d');\n\nconst canvasWidth = canvas.offsetWidth;\nconst canvasHeight = canvas.offsetHeight;\n\nlet geojson = {};\n\nconst state = {\n  clickedLocation: null,\n};\n\nconst mapScale = 180;\nlet mapRotation = [0, 0];\n\nconst mapRotationModifier = 0.4;\n\n// const projection = geoEquirectangular();\nconst projection = geoOrthographic();\n\nconst geoGenerator = geoPath()\n  .projection(projection)\n  .context(ctx);\n\nconst update = () => {\n  projection.fitSize([canvasWidth, canvasHeight], geojson);\n  projection.scale(mapScale);\n  projection.rotate(mapRotation);\n\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n  for (let i = 0; i < geojson.features.length; i += 1) {\n    const d = geojson.features[i];\n\n    ctx.beginPath();\n\n    ctx.lineWidth = 0.45;\n    ctx.strokeStyle = '#fff';\n    ctx.fillStyle = state.clickedLocation && geoContains(d, state.clickedLocation) ? 'blue' : '#ccc';\n\n    geoGenerator(d);\n\n    ctx.stroke();\n    ctx.fill();\n  }\n};\n\nlet dragStartedTime;\n\nconst handleMouseDown = () => {\n  dragStartedTime = Date.now();\n};\n\nconst handleMouseMove = (event) => {\n  if (dragStartedTime) {\n    const dx = Math.round(event.movementX * mapRotationModifier);\n    const dy = Math.round(event.movementY * mapRotationModifier);\n    const [x, y] = mapRotation;\n    mapRotation = [(x + dx) % 360, (y - dy) % 360];\n\n    update();\n  }\n};\n\nfunction handleMouseUp(event) {\n  if (!dragStartedTime || (Date.now() - dragStartedTime < 150)) {\n    const pos = pointer(event, this);\n    state.clickedLocation = projection.invert(pos);\n    update();\n  }\n\n  dragStartedTime = null;\n}\n\nconst initialize = () => {\n  canvas.addEventListener('mousedown', handleMouseDown);\n  canvas.addEventListener('mouseup', handleMouseUp);\n  canvas.addEventListener('mousemove', handleMouseMove);\n};\n\nconst drawMap = async () => {\n  const response = await fetch(geojsonUrl);\n  geojson = await response.json();\n\n  initialize();\n  update();\n};\n\nexport default drawMap;\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","import drawMap from './scripts/map';\n\ndrawMap();\n"],"names":["epsilon","epsilon2","pi","Math","PI","halfPi","quarterPi","tau","abs","atan","atan2","cos","ceil","exp","floor","hypot","log","pow","sin","sign","x","sqrt","asin","noop","line","lines","point","y","m","push","lineStart","lineEnd","rejoin","length","pop","concat","shift","result","a","b","Intersection","points","other","entry","this","z","o","e","v","n","p","segments","compareIntersection","startInside","interpolate","stream","i","subject","clip","forEach","segment","p0","p1","pointEqual","sort","start","current","isSubject","array","tan","Adder","constructor","_partials","Float64Array","_n","add","j","hi","lo","valueOf","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","longitude","polygon","sinPhi","normal","angle","winding","sum","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","arc","intersection","phiArc","merge","arrays","Array","from","flatten","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","polygonContains","sphere","pointLine","clean","ringSegments","filter","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleRadius","cosRadius","radius","acos","clipMax","clipMin","compose","invert","rotationIdentity","round","forwardRotationLambda","deltaLambda","rotationLambda","rotation","rotationPhiGamma","deltaPhi","deltaGamma","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","transformer","methods","s","TransformStream","key","streamGeometry","geometry","streamGeometryType","hasOwnProperty","type","prototype","streamObjectType","Feature","object","FeatureCollection","features","Sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","x0","Infinity","y0","x1","y1","boundsStream","bounds","fit","projection","fitBounds","clipExtent","scale","translate","fitExtent","extent","w","h","min","maxDepth","cosMinDistance","project","delta2","resampleLineTo","a0","b0","c0","a1","b1","c1","depth","dx","dy","d2","c","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","linePoint","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","orthographicRaw","sc","cc","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","arguments","appendRound","r","lengthLineEnd","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ao","bo","ab","map","ringRadians","pointRadians","canvas","document","querySelector","ctx","getContext","canvasWidth","offsetWidth","canvasHeight","offsetHeight","geojson","state","clickedLocation","mapRotation","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","identity","recenter","center","apply","resample","reset","transformRotate","undefined","clipAngle","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","A","u","uu","t2","t","q","polar","q1","code","v0","v00","point2","t0","t1","sinRadius","step","circleStream","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","polygonInside","cleanInside","max","ax","ay","clipRectangle","reflectX","reflectY","precision","fitSize","size","fitWidth","width","fitHeight","height","projectionMutator","geoGenerator","projectionStream","contextStream","path","measure","geoPath","update","clearRect","beginPath","lineWidth","strokeStyle","fillStyle","geoContains","stroke","fill","dragStartedTime","handleMouseDown","Date","now","handleMouseMove","event","movementX","movementY","handleMouseUp","pos","node","sourceEvent","currentTarget","svg","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","rect","left","clientLeft","top","clientTop","pageX","pageY","pointer","async","response","fetch","json","addEventListener","drawMap"],"sourceRoot":""}